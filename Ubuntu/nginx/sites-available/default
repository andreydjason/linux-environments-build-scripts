# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file


##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /usr/share/nginx/www;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ /index.html;
	}

	location /doc {
		root /usr/share;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

	location /images {
		root /usr/share;
		autoindex off;
	}

	location = /favicon.ico {
    log_not_found off;
    access_log off;
	}

	location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
	}
	
	# Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
	location ~* \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
    deny all;
	}
	
	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
	}

	location ~*  \.(jpg|jpeg|png|gif|css|js|ico)$ {
    expires max;
    log_not_found off;
	}

	# location ~ \.(jpg|png|mp3|ogg)$ {
 #    valid_referers server_names;
 #    if ($invalid_referer) {
 #      return 403;
 #    }
 #  }

	# location ~ \.php$ {
		# fastcgi_pass 127.0.0.1:9000;
		# fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		# include /etc/nginx/fastcgi_params;
	# }

	location ~ \.php$ {
		fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    # include /etc/nginx/fastcgi_params;
    include fastcgi_params;
	}
	

	error_page 404 							/404.html;
  error_page 422              /422.html;
  error_page 403              /403.html;
	error_page 500 502 503 504  /50x.html;

	location = /50x.html {
		root /usr/share/nginx/www;
	}

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	# location ~ \.php$ {
	# 	proxy_pass http://127.0.0.1;
	# }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	# location ~ \.php$ {
	# 	fastcgi_pass 127.0.0.1:9000;
	# 	fastcgi_index index.php;
	# 	include fastcgi_params;
	# }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8081;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}